import TelegramBot from "node-telegram-bot-api";
import fs from "fs";
import path from "path";
import fetch from "node-fetch";

// ‚úÖ ‡πÄ‡∏Å‡πá‡∏ö TOKEN ‡∏à‡∏≤‡∏Å env
const TOKEN = process.env.TELEGRAM_TOKEN || "7804401485:AAG6btVvSWnOQTtfGCTc1HIWT-Q31_73KyA";
const bot = new TelegramBot(TOKEN, { polling: true });

bot.on("message", (msg) => {
  bot.sendMessage(msg.chat.id, "‡∏ö‡∏≠‡∏ó Render ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß üöÄ");
});

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå (mock)
function analyzeFace(imagePath) {
  const gender = Math.random() > 0.5 ? "‡∏ä‡∏≤‡∏¢" : "‡∏´‡∏ç‡∏¥‡∏á";
  const emotion = ["‡∏¢‡∏¥‡πâ‡∏°", "‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏±‡∏á", "‡πÄ‡∏®‡∏£‡πâ‡∏≤"][Math.floor(Math.random() * 3)];
  const description = Math.random() > 0.5 ? "‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏•‡∏°" : "‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏¢‡∏≤‡∏ß";
  const score = (Math.random() * 9 + 1).toFixed(1);

  return { gender, emotion, description, score };
}

bot.onText(/\/start/, (msg) => {
  bot.sendMessage(msg.chat.id, "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö üëã ‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏°‡∏≤‡πÄ‡∏•‡∏¢ ‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡∏ú‡∏°‡∏à‡∏∞‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÉ‡∏´‡πâ!");
});

bot.on("photo", async (msg) => {
  const chatId = msg.chat.id;
  const fileId = msg.photo[msg.photo.length - 1].file_id;

  try {
    const file = await bot.getFile(fileId);
    const url = `https://api.telegram.org/file/bot${TOKEN}/${file.file_path}`;
    const res = await fetch(url);
    const buffer = await res.buffer();

    const tempPath = path.join("/tmp", `${chatId}.jpg`);
    fs.writeFileSync(tempPath, buffer);

    const result = analyzeFace(tempPath);
    const replyText = `üë§ ‡πÄ‡∏û‡∏®: ${result.gender}\nüòä ‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå: ${result.emotion}\nüìù ‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞: ${result.description}\n‚≠ê ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô: ${result.score}/10`;

    await bot.sendMessage(chatId, replyText);
    fs.unlinkSync(tempPath);
  } catch (err) {
    console.error("Error:", err);
    bot.sendMessage(chatId, "‚ùå Error: " + err.message);
  }
});

console.log("Bot started...");
