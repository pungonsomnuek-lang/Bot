const fs = require("fs");
const path = require("path");

// üëâ ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡∏ó‡∏≥ Face Detection ‡∏à‡∏£‡∏¥‡∏á ‡πÜ ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ library ‡πÄ‡∏ä‡πà‡∏ô face-api.js ‡∏´‡∏£‡∏∑‡∏≠ opencv4nodejs
// ‡πÅ‡∏ï‡πà‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡∏µ‡πâ‡∏à‡∏∞ "‡∏à‡∏≥‡∏•‡∏≠‡∏á" ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡∏Å‡∏±‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î Python ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì

function analyzeFace(imagePath) {
  try {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏£‡∏¥‡∏á‡πÑ‡∏´‡∏°
    if (!fs.existsSync(imagePath)) {
      return { error: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏†‡∏≤‡∏û" };
    }

    // üëâ ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤ (‡πÉ‡∏ô‡∏Ç‡∏≠‡∏á‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏ä‡πâ model ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö)
    const detectedFace = true;

    if (!detectedFace) {
      return { error: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÉ‡∏ô‡∏†‡∏≤‡∏û" };
    }

    // üëâ ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö Python
    const gender = Math.random() > 0.5 ? "‡∏ä‡∏≤‡∏¢" : "‡∏´‡∏ç‡∏¥‡∏á";
    const age = Math.floor(Math.random() * (40 - 18 + 1)) + 18; // 18 - 40
    const emotions = ["‡∏¢‡∏¥‡πâ‡∏°", "‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏±‡∏á", "‡πÄ‡∏®‡∏£‡πâ‡∏≤"];
    const emotion = emotions[Math.floor(Math.random() * emotions.length)];
    const description = Math.random() > 0.5 ? "‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏•‡∏°" : "‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏¢‡∏≤‡∏ß";
    const score = (Math.random() * 9 + 1).toFixed(1); // 1.0 - 10.0

    return {
      gender,
      age,
      emotion,
      description,
      score,
    };
  } catch (err) {
    return { error: err.message };
  }
}

// ------------------------
// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô
const testImage = path.join(__dirname, "test.jpg"); // ‡πÉ‡∏™‡πà path ‡∏Ç‡∏≠‡∏á‡∏£‡∏π‡∏õ‡∏à‡∏£‡∏¥‡∏á
console.log(analyzeFace(testImage));
